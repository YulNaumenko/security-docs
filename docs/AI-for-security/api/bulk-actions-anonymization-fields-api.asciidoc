[[bulk-actions-anonymization-fields-api]]
=== Bulk anonymization fields actions

Applies a bulk action to multiple anonymization fields. The bulk action is applied to all anonymization fields that match the filter or to the list of anonymization fields by their IDs.

[discrete]
===== Request URL

`POST  <kibana host>:<port>/api/security_ai_assistant/anonymization_fields/_bulk_action`

[discrete]
===== Request body

A JSON object with the following properties:

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required
| `create` | <<bulk-create-anonymization-fields-schema, BulkCreateAction[]>> |  Array of anonymization fields objects to create. | No
| `delete` | String[] |  Array of anonymization fields IDs to which a bulk action will be applied. | No
| `update` | <<bulk-update-anonymization-fields-schema, BulkUpdateAction[]>> |  Array of anonymization fields objects with the fields to update. | No

|==============================================


[[bulk-create-anonymization-fields-schema]]
[discrete]
==== BulkCreateAction object

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`field` |String |Field name in the document which will be send to LLM. |Yes
|`allowed` |Boolean |Identify if the field should be included to the list of the fields which will be send to LLM. |Yes
|`anonymized` |Boolean |Indentify if the field should be anonymized. By default is `false` |Yes
|==============================================


[discrete]
[[bulk-update-anonymization-fields-schema]]
===== `BulkUpdateAction` schema

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`allowed` |Boolean |Identify if the field should be included to the list of the fields which will be send to LLM. |No
|`anonymized` |Boolean |Indentify if the field should be anonymized. By default is `false` |No
|==============================================


[discrete]
===== Example requests

*Example 1*

The following request create 2 anonymization fields:

[source,console]
--------------------------------------------------
POST api/security_ai_assistant/anonymization_fields/_bulk_action
{
   "create":[
      {
         "field":"agent.type",
         "allowed":true,
         "anonymized":false
      },
      {
         "field":"agent.name",
         "allowed":true,
         "anonymized":true
      }
   ],
}

--------------------------------------------------

[discrete]
===== Response code

`200`::
    Indicates a successful call.

[discrete]
===== Response payload

JSON object containing the action's outcome:

- `attributes.summary.total`: Total number of anonymization fields matching the bulk action
- `attributes.summary.succeeded`: Number of successful outcomes (number of anonymization fields that were created, deleted, or updated)
- `attributes.summary.failed`: Number of failed outcomes
- `attributes.summary.skipped`: Number of anonymization fields that were skipped due to various reasons (explained below)
- `attributes.results.created`: Anonymization field objects that were created during the action's execution
- `attributes.results.updated`: Anonymization field objects that were updated during the action's execution
- `attributes.results.deleted`: Anonymization field objects that were deleted during the action's execution
- `attributes.results.skipped`: Anonymization field that were skipped during the action's execution

An anonymization field can only be `skipped` when the bulk action to be performed on it results in nothing being done. For example, if the `update` action is used to add a filed to a prompt that already has that value. Objects returned in `attributes.results.skipped` will only include prompts' `id`, `name`, and `skip_reason`.

[source,json]
--------------------------------------------------
{
    "success": true,
    "anonymization_fields_count": 2,
    "attributes": {
        "results": {
            "updated": [],
            "created": [
                {
                    "timestamp": "2024-08-13T20:54:23.125Z",
                    "createdAt": "2024-08-13T20:54:23.125Z",
                    "field": "agent.type",
                    "allowed": true,
                    "anonymized": false,
                    "updatedAt": "2024-08-13T20:54:23.125Z",
                    "id": "cB2FTZEBYaDeA-NhPHqW"
                },
                {
                    "timestamp": "2024-08-13T20:54:23.125Z",
                    "createdAt": "2024-08-13T20:54:23.125Z",
                    "field": "agent.name",
                    "allowed": true,
                    "anonymized": true,
                    "updatedAt": "2024-08-13T20:54:23.125Z",
                    "id": "cR2FTZEBYaDeA-NhPHqW"
                }
            ],
            "deleted": [],
            "skipped": []
        },
        "summary": {
            "failed": 0,
            "succeeded": 2,
            "skipped": 0,
            "total": 2
        }
    }
}
--------------------------------------------------

*Example 2, Partial failure*

The following request removes anonymization field that have the ID sent in the payload and updates `allowed` value for the anonymization field with ID "lh12SZEBYaDeA-NhmkwG" and `anonymized` for ID "lR12SZEBYaDeA-NhmkwG":
[source,console]
--------------------------------------------------
POST api/security_ai_assistant/anonymization_fields/_bulk_action
{
  "delete": {
    ids: [
      "cR2FTZEBYaDeA-NhPHqW"
    ]
  },
   "update":[
      {
         "id":"lh12SZEBYaDeA-NhmkwG",
         "allowed":false
      },
      {
         "id":"lR12SZEBYaDeA-NhmkwG",
         "anonymized":true
      }
   ]
}
--------------------------------------------------

[discrete]
===== Response code

`500`::
    Indicates partial bulk action failure.

[discrete]
===== Response payload

If processing of any anonymization field fails, a partial error outputs the ID and/or name of the affected anonymization field and the corresponding error, as well as successfully processed anonymization fields (in the same format as a successful 200 request).

[discrete]
==== Example payload

[source,json]
--------------------------------------------------
{
    "message": "Bulk delete partially failed",
    "status_code": 500,
    "attributes": {
        "errors": [
            {
                "message": "Some error happened here",
                "status_code": 500,
                "anonymization_fields": [
                    {
                        "id": "cR2FTZEBYaDeA-NhPHqW",
                        "field": "test"
                    }
                ]
            }
        ],
        "results": {
            "updated": [
                {
                    "timestamp": "2024-08-13T01:59:55.141Z",
                    "createdAt": "2024-08-13T01:59:55.141Z",
                    "field": "@timestamp",
                    "allowed": false,
                    "anonymized": false,
                    "updatedAt": "2024-08-13T21:00:37.502Z",
                    "namespace": "default"
                },
                {
                    "timestamp": "2024-08-13T01:59:55.141Z",
                    "createdAt": "2024-08-13T01:59:55.141Z",
                    "field": "_id",
                    "allowed": true,
                    "anonymized": true,
                    "updatedAt": "2024-08-13T21:00:37.502Z",
                    "namespace": "default"
                }
            ],
            "created": [],
            "deleted": [],
            "skipped": [],
        },
        "summary": {
            "failed": 1,
            "succeeded": 1,
            "skipped": 0,
            "total": 2
        }
    }
}
--------------------------------------------------
